AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Sample SAM Template for basic-aws-apigateway-demo

Parameters:
  DBInstanceIdentifier:
    Description: The database name
    Type: String
    Default: mymysqlinstance

  DBName:
    Description: The name of the database to create
    Type: String
    Default: VictoriaProFitnessDb

  DBUsername:
    Description: The database admin account username
    Type: String
    Default: admin

  DBPassword:
    Description: The database admin account password
    Type: String
    NoEcho: true
    MinLength: 8
    MaxLength: 41
    Default: password

  DBInstanceClass:
    Description: The database instance type
    Type: String
    Default: db.t3.micro
    AllowedValues:
      - db.t3.micro # esta es para desarrollo
      
    ConstraintDescription: must be a valid RDS instance type.

  AllocatedStorage:
    Description: The size of the database (Gb)
    Type: Number
    Default: 20
    MinValue: 5
    MaxValue: 1024
    ConstraintDescription: must be between 5 and 1024Gb.


Globals:
  Function:
    Runtime: python3.11
    Timeout: 30
    Environment:
      Variables:
        TABLE_NAME: data-table
    VpcConfig:
        SecurityGroupIds:
          - !Ref MySecurityGroup
        SubnetIds:
          - !Ref MySubnet1
          - !Ref MySubnet2
    



Resources:
  

  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Lambda function
      VpcId: !Ref MyVPC

  MySubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.1.0/24

  MySubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.2.0/24

  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16

  MyDBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      VpcId: !Ref MyVPC
      GroupDescription: Enable RDS access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 0.0.0.0/0  # Note: For production, restrict this to specific IP ranges or security groups

  MyDBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for RDS instance
      SubnetIds:
          - !Ref MySubnet1
          - !Ref MySubnet2

  VictoriaProFitnessApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: Basic AWS Api Gateway
      StageName: stage
      Cors:
        AllowMethods: "'GET,POST,OPTIONS'"
        AllowHeaders: "'content-type'"
        AllowOrigin: "'*'"

  RequirementsLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      CompatibleArchitectures:
        - x86_64
      ContentUri: layer

  LoginService:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src
      Handler: handlers/login.handler
      Layers:
        - !Ref RequirementsLayer
      Policies:
        - AWSLambdaVPCAccessExecutionRole
      Events:
        HelloWorldApi:
          Type: Api
          Properties:
            RestApiId: !Ref VictoriaProFitnessApiGateway
            Path: /login
            Method: POST
  
  DatabaseProcess:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src
      Handler: handlers/database_process.handler
      Layers:
        - !Ref RequirementsLayer
      Policies:
        - AWSLambdaVPCAccessExecutionRole

  
  VictoriaDBInstance:
    Type: AWS::RDS::DBInstance
    Properties: 
      DBInstanceIdentifier: !Ref DBInstanceIdentifier
      AllocatedStorage: !Ref AllocatedStorage
      DBInstanceClass: !Ref DBInstanceClass
      Engine: MySQL
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      DBName: !Ref DBName
      MultiAZ: false
      StorageType: gp2
      VPCSecurityGroups:
        - !Ref MyDBSecurityGroup
      DBSubnetGroupName: !Ref MyDBSubnetGroup
      PubliclyAccessible: false
            
Outputs:
  VictoriaProFitnessApiGateway:
    Description: 'API Gateway endpoint URL for Staging stage for Hello World function'
    Value: !Sub 'https://${VictoriaProFitnessApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Staging/hello/'
  VictoriaProFitnessApiGatewayRestApiId:
    Description: 'API Gateway ARN for Basic AWS API Gateway'
    Value: !Ref VictoriaProFitnessApiGateway
    Export:
      Name: VictoriaProFitnessApiGateway-RestApiId
  VictoriaProFitnessApiGatewayRootResourceId:
    Value: !GetAtt VictoriaProFitnessApiGateway.RootResourceId
    Export:
      Name: VictoriaProFitnessApiGateway-RootResourceId
  DBInstanceEndpoint:
    Description: The connection endpoint for the database
    Value: !GetAtt 
      - VictoriaDBInstance
      - Endpoint.Address
    Export:
      Name: DBInstanceEndpoint
  DBInstancePort:
    Description: The connection port for the database
    Value: !GetAtt 
      - VictoriaDBInstance
      - Endpoint.Port
    Export:
      Name: DBInstancePort